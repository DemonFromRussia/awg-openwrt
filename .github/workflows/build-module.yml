name: Build AmneziaWG for snapshot OpenWRT
on: [workflow_dispatch]

permissions:
  contents: write

jobs:
  build:
    name: "snapshots - ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_env:
          - target: mediatek
            subtarget: filogic
    steps:
      - name: Get snapshot commit SHA and device ARCH
        run: |
          PROFILE_URL="https://downloads.openwrt.org/snapshots/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/profiles.json"
          SNAPSHOT_COMMIT_SHA=$(wget -q $PROFILE_URL -O- | tr ',' '\n' | grep "version_code"| awk -F: '{print $2}' | tr -d '"' | awk -F- '{print $2}')
          echo "Snapshot commit sha: $SNAPSHOT_COMMIT_SHA"
          echo "SNAPSHOT_COMMIT_SHA=$SNAPSHOT_COMMIT_SHA" >> $GITHUB_ENV

          DEVICE_ARCH=$(wget -q $PROFILE_URL -O- | tr ',' '\n' | grep "arch_packages"| awk -F: '{print $2}' | tr -d '"')
          echo "Device ARCH: $DEVICE_ARCH"
          echo "DEVICE_ARCH=$DEVICE_ARCH" >> $GITHUB_ENV

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          path: awg-openwrt

      - name: Check if release already exist
        working-directory: ./awg-openwrt 
        run: |
          TAG="${{ env.SNAPSHOT_COMMIT_SHA}}_${{ env.DEVICE_ARCH}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
            echo "Already released ${TAG}"
            exit 1
          fi

      - name: Checkout openwrt repo
        uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          fetch-depth: 0
          path: openwrt

      - name: Checkout snapshot commit in openwrt repo  
        working-directory: ./openwrt 
        run: git checkout ${{ env.SNAPSHOT_COMMIT_SHA}}
  
      - name: Building toolchain and kernel
        working-directory: ./openwrt 
        run: |
          echo "pkgarch: ${{ env.DEVICE_ARCH}}, target:${{ matrix.build_env.target}}, subtarget: ${{ matrix.build_env.subtarget}}"

          # Setup & install feeds
          wget https://downloads.openwrt.org/snapshots/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/feeds.buildinfo -O feeds.conf
          echo "src-git awgopenwrt https://github.com/amnezia-vpn/awg-openwrt.git" >> ./feeds.conf
          ./scripts/feeds update && ./scripts/feeds install -a

          # Setup config with AWG and dependencies
          wget https://downloads.openwrt.org/snapshots/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-proto-amneziawg=y" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config

          make defconfig

          echo "    > make tools/install"
          make tools/install -i -j `nproc`

          echo "    > make toolchain/install"
          make toolchain/install  -i -j `nproc`

          # compile kernel module
          echo "    > make target/linux/compile"
          make target/linux/compile  -i -j `nproc` V=s

      - name: Build AmneziaWG
        working-directory: ./openwrt 
        run: |
          # Ignore kmod build for some targets, replace with the awg-go
          make package/kmod-amneziawg/{clean,download,prepare} V=s || true
          make package/kmod-amneziawg/compile V=s || true

          make package/luci-proto-amneziawg/{clean,download,prepare}
          make package/luci-proto-amneziawg/compile V=s

          make V=s package/amneziawg-tools/{clean,download,prepare}
          make V=s package/amneziawg-tools/compile

      - name: Prepare artifacts
        run: |
          postfix="${{ env.SNAPSHOT_COMMIT_SHA}}_${{ env.DEVICE_ARCH}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          cp openwrt/bin/packages/${{ env.DEVICE_ARCH }}/awgopenwrt/amneziawg-tools_*.ipk awg-openwrt/amneziawg-tools_${postfix}.ipk
          cp openwrt/bin/packages/${{ env.DEVICE_ARCH }}/awgopenwrt/luci-proto-amneziawg_*.ipk awg-openwrt/luci-proto-amneziawg_${postfix}.ipk
          cp openwrt/bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-amneziawg_*.ipk awg-openwrt/kmod-amneziawg_${postfix}.ipk

      - name: Publish tag
        working-directory: ./awg-openwrt
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add *.ipk
          git commit -am "${{ env.SNAPSHOT_COMMIT_SHA}}_${{ env.DEVICE_ARCH}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          git tag "${{ env.SNAPSHOT_COMMIT_SHA}}_${{ env.DEVICE_ARCH}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          git push origin --tags

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: awg-openwrt/*.ipk
          tag_name: ${{ env.SNAPSHOT_COMMIT_SHA}}_${{ env.DEVICE_ARCH}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}